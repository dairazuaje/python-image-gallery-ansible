---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      #profile: default
      region: us-east-1
  tasks:

    #########################################################################
    #########################################################################
    #############  Create all security groups for VPC  ######################
    #########################################################################
    #########################################################################

    - name: Create nginx-server-sg
      ec2_group:
        name: Module5-ig-nginx-server-sg
        description: Allows ssh, http and https from anywhere
        vpc_id: "{{vpc.vpc.id}}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 443
              - 1024 - 65535
            cidr_ip: 0.0.0.0/0
        tags:
          Name: Module5-ig-nginx-server-sg
        state: present
      register: ig_nginx_server_sg


    ######### Create ig-postgres-sg, ig-postgres-tag-sg and associate ############

    # Create ig-postgres-tag-sg with no rules and update after assigning group to ig-postgres-sg
    - name: Create ig-postgres-tag-sg
      ec2_group:
        name: Module5-ig-postgres-tag-sg
        description: Allows outbound to ig-postgres-sg
        vpc_id: "{{vpc.vpc.id}}"
        tags:
          Name: Module5-ig-postgres-tag-sg
        state: present
      register: ig_postgres_tag_sg

    # Create ig-postgres-sg and assign group ig-postgres-tag on port 5432
    - name: Create ig-postgres-sg
      ec2_group:
        name: Module5-ig-postgres-sg
        description: Allows traffic on port 5432 from ig-postgres-tag-sg
        vpc_id: "{{vpc.vpc.id}}"
        rules:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            group_id: "{{ig_postgres_tag_sg.group_id}}"
        tags:
          Name: Module5-ig-postgres-sg
        state: present
      register: ig_postgres_sg

    # Update ig-postgres-tag-sg to have outbound to ig-postgres-sg
    - name: Update ig-postgres-tag-sg
      ec2_group:
        name: Module5-ig-postgres-tag-sg
        description: Allows outbound to ig-postgres-sg
        vpc_id: "{{vpc.vpc.id}}"
        rules_egress:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            group_id: "{{ig_postgres_sg.group_id}}"
        tags:
          Name: Module5-ig-postgres-tag-sg
        state: present
      register: ig_postgres_tag_sg

    ######### Create ig-endpoint-sg, ig-endpoint-tag-sg and associate ############

    # Create ig-endpoint-tag-sg with no rules and update after assigning group to ig-endpoint-sg
    - name: Create ig-endpoint-tag-sg
      ec2_group:
        name: Module5-ig-endpoint-tag-sg
        description: Allows Outgoing traffic to endpoint
        vpc_id: "{{vpc.vpc.id}}"

        tags:
          Name: Module5-ig-endpoint-tag-sg
        state: present
      register: ig_endpoint_tag_sg

    # Create ig-endpoint-sg and assign group ig-endpoint-tag to ig-endpoint-sg
    - name: Create ig-endpoint-sg
      ec2_group:
        name: Module5-ig-endpoint-sg
        description: Allows inbound traffic from ig-endpoint-tag-sg
        vpc_id: "{{vpc.vpc.id}}"
        rules:
          - proto: all
            group_id:
              - "{{ig_endpoint_tag_sg.group_id}}"
              - "{{ig_nginx_server_sg.group_id}}"
        tags:
          Name: Module5-ig-endpoint-sg
        state: present
      register: ig_endpoint_sg

    # Update ig-postgres-tag-sg to have outbound to ig-postgres0sg
    - name: Update ig-endpoint-tag-sg
      ec2_group:
        name: Module5-ig-endpoint-tag-sg
        description: Allows outgoing to ig-endpoint-sg
        vpc_id: "{{vpc.vpc.id}}"
        rules_egress:
          - proto: all
            group_id: "{{ig_endpoint_sg.group_id}}"
        tags:
          Name: Module5-ig-endpoint-tag-sg
        state: present
      register: ig_endpoint_tag_sg