---
- hosts: localhost
  gather_facts: no
  vars:
    ami_id: "ami-09d95fab7fff3776c"
  module_defaults:
    group/aws:
      #profile: default
      region: us-east-1

  tasks:
    - name: Provision EC2 instance
      ec2:
        key_name: csKP
        group:
          - Module5-ig-nginx-server-sg
          - Module5-ig-postgres-tag-sg
          - Module5-ig-endpoint-tag-sg
        instance_type: t3a.nano
        image: "{{ami_id}}"
        instance_tags:
          Name: Module5 EC2 DB Setup
        wait: true
        wait_timeout: 500
        vpc_subnet_id: "{{public_subnet.subnet.id}}"
        instance_profile_name: image-gallery-server-role
        assign_public_ip: yes
        user_data: "{{ lookup('file', 'startup-scripts/ansible_startup.sh') }}"
        exact_count: 1
        count_tag:
          Name: Module5 EC2 DB Setup
      register: ec2_dev

    - name: Set RDS Variable
      set_fact:
        rds_address: "{{image_gallery_db.instance.endpoint}}"

    - name: Add dev ec2 host to hosts list
      add_host:
        name: "{{ec2_dev.tagged_instances[0].public_dns_name}}"
        groups: bastion
        #rds_address: "{{image_gallery_db.instance.endpoint}}"
        #hostname: Module5 EC2 DB Setup
        #groups: db_setup_ec2
      register: ec2
#    - name: Add new instance to host group
#      add_host:
#        hostname: "{{ item.public_ip }}"
#        groupname: bastion
#      loop: "{{ ec2_dev.instances }}"

    - local_action: copy content={{ rds_address }} dest=rds.txt

    - name: Wait for SSH to come up
      #delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 240
        timeout: 30
      loop: "{{ ec2_dev.instances }}"
